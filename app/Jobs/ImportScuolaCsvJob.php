<?php

namespace App\Jobs;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Bus\Dispatchable;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Queue\SerializesModels;
use Illuminate\Support\Facades\DB;

class ImportScuolaCsvJob implements ShouldQueue
{
    use Dispatchable, InteractsWithQueue, Queueable, SerializesModels;

    protected $filePath;

    public function __construct(string $filePath)
    {
        $this->filePath = $filePath;
    }

    public function handle()
    {
        DB::connection()->getPdo()->setAttribute(\PDO::MYSQL_ATTR_LOCAL_INFILE, true);

        // Get list of columns from scuole table
        $columns = DB::getSchemaBuilder()->getColumnListing('scuole');

        $columnsQueryPart = implode(', ', $columns);

        // Create a temporary table to hold the raw import data
        $createTmpTableQuery = "
        CREATE TEMPORARY TABLE tmp_scuole AS SELECT {$columnsQueryPart} FROM scuole WHERE 1=0;
        ";

        DB::unprepared($createTmpTableQuery);
        $loadDataQuery = sprintf("
        LOAD DATA LOCAL INFILE '%s'
        INTO TABLE tmp_scuole
        FIELDS TERMINATED BY ','
        ENCLOSED BY '\"'
        LINES TERMINATED BY '\\n'
        IGNORE 1 ROWS
        (
            @ANNOSCOLASTICO,@AREAGEOGRAFICA,@REGIONE,@PROVINCIA,@CODICEISTITUTORIFERIMENTO,@DENOMINAZIONEISTITUTORIFERIMENTO,@CODICESCUOLA,@DENOMINAZIONESCUOLA,@INDIRIZZOSCUOLA,@CAPSCUOLA,@CODICECOMUNESCUOLA,@DESCRIZIONECOMUNE,@DESCRIZIONECARATTERISTICASCUOLA,@DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA,@INDICAZIONESEDEDIRETTIVO,@INDICAZIONESEDEOMNICOMPRENSIVO,@INDIRIZZOEMAILSCUOLA,@INDIRIZZOPECSCUOLA,@SITOWEBSCUOLA,@SEDESCOLASTICA
        )
        SET
            ANNOSCOLASTICO = TRIM(@ANNOSCOLASTICO),
            AREAGEOGRAFICA = TRIM(@AREAGEOGRAFICA),
            REGIONE = TRIM(@REGIONE),
            PROVINCIA = TRIM(@PROVINCIA),
            CODICEISTITUTORIFERIMENTO = TRIM(@CODICEISTITUTORIFERIMENTO),
            DENOMINAZIONEISTITUTORIFERIMENTO = TRIM(@DENOMINAZIONEISTITUTORIFERIMENTO),
            CODICESCUOLA = TRIM(@CODICESCUOLA),
            DENOMINAZIONESCUOLA = TRIM(@DENOMINAZIONESCUOLA),
            INDIRIZZOSCUOLA = TRIM(@INDIRIZZOSCUOLA),
            CAPSCUOLA = TRIM(@CAPSCUOLA),
            CODICECOMUNESCUOLA = TRIM(@CODICECOMUNESCUOLA),
            DESCRIZIONECOMUNE = TRIM(@DESCRIZIONECOMUNE),
            DESCRIZIONECARATTERISTICASCUOLA = TRIM(@DESCRIZIONECARATTERISTICASCUOLA),
            DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA = TRIM(@DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA),
            INDICAZIONESEDEDIRETTIVO = IF(TRIM(@INDICAZIONESEDEDIRETTIVO)='NO', 0, 1),
            INDICAZIONESEDEOMNICOMPRENSIVO = IF(TRIM(@INDICAZIONESEDEOMNICOMPRENSIVO)='Non Disponibile', 0, 1),
            INDIRIZZOEMAILSCUOLA = TRIM(@INDIRIZZOEMAILSCUOLA),
            INDIRIZZOPECSCUOLA = IF(TRIM(@INDIRIZZOPECSCUOLA)='Non Disponibile', 0, 1),
            SITOWEBSCUOLA = TRIM(@SITOWEBSCUOLA),
            SEDESCOLASTICA = IF(TRIM(@SEDESCOLASTICA)='NO', 0, 1)
    ", addslashes($this->filePath));

        DB::unprepared($loadDataQuery);

        // Insert the processed rows from the temporary table into the main table
        $insertProcessedRowsQuery = "
    INSERT INTO scuole
        (ANNOSCOLASTICO, AREAGEOGRAFICA, REGIONE, PROVINCIA, CODICEISTITUTORIFERIMENTO, DENOMINAZIONEISTITUTORIFERIMENTO, CODICESCUOLA, DENOMINAZIONESCUOLA, INDIRIZZOSCUOLA, CAPSCUOLA, CODICECOMUNESCUOLA, DESCRIZIONECOMUNE, DESCRIZIONECARATTERISTICASCUOLA, DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA, INDICAZIONESEDEDIRETTIVO, INDICAZIONESEDEOMNICOMPRENSIVO, INDIRIZZOEMAILSCUOLA, INDIRIZZOPECSCUOLA, SITOWEBSCUOLA, SEDESCOLASTICA, tipo_scuola)
    SELECT
        ANNOSCOLASTICO, AREAGEOGRAFICA, REGIONE, PROVINCIA, CODICEISTITUTORIFERIMENTO, DENOMINAZIONEISTITUTORIFERIMENTO, CODICESCUOLA, DENOMINAZIONESCUOLA, INDIRIZZOSCUOLA, CAPSCUOLA, CODICECOMUNESCUOLA, DESCRIZIONECOMUNE, DESCRIZIONECARATTERISTICASCUOLA, DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA, INDICAZIONESEDEDIRETTIVO, INDICAZIONESEDEOMNICOMPRENSIVO, INDIRIZZOEMAILSCUOLA, INDIRIZZOPECSCUOLA, SITOWEBSCUOLA, SEDESCOLASTICA,
        CASE
            WHEN DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA = 'SCUOLA PRIMO GRADO' THEN 'Scuola Media'
            ELSE 'Scuola Superiore'
        END AS tipo_scuola
    FROM tmp_scuole
    WHERE DESCRIZIONETIPOLOGIAGRADOISTRUZIONESCUOLA NOT IN ('SCUOLA INFANZIA', 'SCUOLA PRIMARIA', 'ISTITUTO COMPRENSIVO')
";

        DB::unprepared($insertProcessedRowsQuery);

    }
}
